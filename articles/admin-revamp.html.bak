<!DOCTYPE html>
<html>
  <head>
    
    
  <meta charset="utf-8"> 
	
	

	<!-- <meta http-equiv="X-UA-Compatible" content="IE=edge"> -->
	<!--[if IE]><meta http-equiv='X-UA-Compatible' content='IE=edge,chrome=1'><![endif]-->	
	<meta name="description" content="Java open source shopping cart | E-commerce content management" />
	<meta name="keywords" content="Java open source shopping cart, java e-commerce, java shopping cart, responsive e-commerce, java open source, free Java shopping cart" />
	<meta name="author" content="Shopizer" />     
	<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes">
        <link href="../stylesheets/bootstrap.css" rel="stylesheet" type="text/css" media="all" />
        <link href="../stylesheets/layout.css" rel="stylesheet" type="text/css" media="all" /> 
        <link href="../stylesheets/technical.css" rel="stylesheet" type="text/css" media="all" />   
	<link href='http://fonts.googleapis.com/css?family=Open+Sans:400,300,300italic,400italic,600,600italic,700,700italic,800,800italic' rel='stylesheet' type='text/css'>

    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
      <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
    <![endif]-->









	<script>
  	   	//var _gaq = _gaq || [];
  	   	//_gaq.push(['_setAccount', 'UA-4436714-6']);
  	   	//(function() {
    		//	var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    		//	ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
   		 	//var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  	   	//})();
	</script>

    <!--[if lt IE 9]>
    <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->

  <title>New features</title>
  </head>

  <body>
  
  
  <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
  <h2 id="get-shopizer">New features</h2>
  <br/>
  <p>

  Upcoming features for the current release

 </p>
 
 <h3 id="maven">Coupons and vouchers</h3><hr/
 
 <br/> 
 <p>
 Yep, you know those coupons you can redeem in the shopping cart
 </p>
 
  
 <p>
 To be described
 </p>
 <br/>


  <h3 id="maven">Newsletter opt-in & opt-out</h3><hr/>
<br/>
<p>
A text box that can be placed in a template that allows a user to opt-in for a newsletter. Tables and model objects are already created. Need to add a core service and sm-shop ui layer to support that functionality. Need a link to opt-out. Should be REST services to opt in and opt-out (must be private urls). Need a service to export opt-out users to a CSV only for the initial version
</p>
 <p>
The Opt-in / Opt-out functionality allows the gathering of customer information in the context of an offer. Usually the system captures the customer
email address in order for instance to send targetted offers to those customers.
<br/>
The Opt-in / Opt-out functionality requires the following changes to the current release:
 </p>
<p class="well">

		-New Optin model object. The class com.salesmanager.core.business.system.optin.model.Optin defines an offer for a specific store.
		That object already exist in sm-core-model project
		<br/>

		-New CustomerOptin model object. The class com.salesmanager.core.business.system.optin.model.CustomerOptin defines a Customer that has opted-in to an offer for a specific store.
		That object already exist in sm-core-model project
		<br/>

		-New CustomerOptinDao which is the repository object that control the hibernate persistence of the CustomerOptin model object.
		That object already exist in sm-core-model project
		<br/>

		-New OptinDao which is the repository object that control the hibernate persistence of the Optin model object.
		That object already exist in sm-core-model project
		<br/>

		-New OptinService which is the service entry point to Optin repository
		<b>Has to be created in sm-core under business.system.service</b>
		<br/>

		-New CustomerOptinService which is the service entry point to CustomerOptin repository
		<b>Has to be created in sm-core under business.system.service</b>
		<br/>

		-New unit test for testing the creation and deletion of an Optin. New unit test for testing the creation and deletion of CustomerOptin
		</br>
		
		- New admin page to create Optin campaign
		<br/>
		
		- REST service to manage customer Optin
		</br>
		
		- REST service to manmage customer Optout
		<br/>
		
		- REST service to export customer optin list based on parameters
</ul>
</p>
<br/>
<p>
<h3>Optin object</h3>	
<br/>
<pre>
	<code>
/**
 * Optin defines optin campaigns for the system.
 * @author carlsamson
 *
 */
@Entity
@EntityListeners(value = AuditListener.class)
@Table(name = "OPTIN", schema= SchemaConstant.SALESMANAGER_SCHEMA,uniqueConstraints=
@UniqueConstraint(columnNames = {"MERCHANT_ID", "CODE"}))
public class Optin extends SalesManagerEntity<Long, Optin> implements Serializable {

	

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@Id
	@Column(name = "OPTIN_ID")
	@TableGenerator(name = "TABLE_GEN", table = "SM_SEQUENCER", pkColumnName = "SEQ_NAME", valueColumnName = "SEQ_COUNT", pkColumnValue = "OPTIN_SEQ_NEXT_VAL")
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "TABLE_GEN")
	private Long id;
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column (name ="START_DATE")
	private Date startDate;
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column (name ="END_DATE")
	private Date endDate;
	
	@ManyToOne(targetEntity = MerchantStore.class)
	@JoinColumn(name="MERCHANT_ID")
	private MerchantStore merchant;
	
	@Column(name="CODE", nullable=false)
	private String code;
	
	@Column(name="DESCRIPTION")
	private String description;


	@Override
	public Long getId() {
		return id;
	}

	@Override
	public void setId(Long id) {
		this.id = id;	
	}

	public Date getStartDate() {
		return startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	public Date getEndDate() {
		return endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	public MerchantStore getMerchant() {
		return merchant;
	}

	public void setMerchant(MerchantStore merchant) {
		this.merchant = merchant;
	}

	public String getCode() {
		return code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

}

	</code>
	
</pre>
</p>

<br/>
<p>
id : auto generated identifier<br/>
startDate : date to activate the opt in campaign<br/>
endDate : date to de activate optin campaign<br/>
merchant : the MerhantStore owner of the campaign<br/>
code : a unique administrator generated code for identifying the campaign<br/>
description : describes the optin campaign<br/>
</p>
<br/>

<p>
<h3>CustomerOptin object</h3>	
<br/>
<pre>
	<code>
		
		

/**
 * CustomerOptin defines the relationship between a customer and an optin campaign for the system.
 * @author carlsamson
 *
 */
@Entity
@EntityListeners(value = AuditListener.class)
@Table(name = "CUSTMER_OPTIN", schema= SchemaConstant.SALESMANAGER_SCHEMA,uniqueConstraints=
@UniqueConstraint(columnNames = {"EMAIL", "OPTIN_ID"}))
public class CustomerOptin extends SalesManagerEntity<Long, CustomerOptin> implements Serializable {

	

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@Id
	@Column(name = "CUSTOMER_OPTIN_ID")
	@TableGenerator(name = "TABLE_GEN", table = "SM_SEQUENCER", pkColumnName = "SEQ_NAME", valueColumnName = "SEQ_COUNT", pkColumnValue = "CUST_OPT_SEQ_NEXT_VAL")
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "TABLE_GEN")
	private Long id;
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column (name ="OPTIN_DATE")
	private Date optinDate;

	
	@ManyToOne(targetEntity = Optin.class)
	@JoinColumn(name="OPTIN_ID")
	private Optin optin;
	
	@Column(name="FIRST")
	private String firstName;
	
	@Column(name="LAST")
	private String lastName;
	
	@Column(name="EMAIL")
	private String email;
	
	@Column(name="VALUE")
	@Type(type = "org.hibernate.type.StringClobType")
	private String value;

	@Override
	public Long getId() {
		return id;
	}

	@Override
	public void setId(Long id) {
		this.id = id;	
	}

	public Date getOptinDate() {
		return optinDate;
	}

	public void setOptinDate(Date optinDate) {
		this.optinDate = optinDate;
	}

	public Optin getOptin() {
		return optin;
	}

	public void setOptin(Optin optin) {
		this.optin = optin;
	}

	public String getFirstName() {
		return firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	public String getLastName() {
		return lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getValue() {
		return value;
	}

	public void setValue(String value) {
		this.value = value;
	}

}

		
		
	</code>
	
</pre>
</p>

<br/>
<p>
id : auto generated identifier<br/>
optinDate : date the customer opted in<br/>
optin : relationship to the optin campaign<br/>
firstName : first name of the customer<br/>
lastName : last name of the customer<br/>
email : email of the customer<br/>
value : optional additional customer information captured for the campaign<br/>
</p>
<br/>

<br/>
<h2>&nbsp;</h2>
<br/>
<h2>&nbsp;</h2>
<br/>
<h2>&nbsp;</h2>
<br/>
<h2>&nbsp;</h2>


<p>

<a href="http://shopizer-ecommerce.github.io/shopizer/index.html">Return to the main documentation menu</a>
</p>
  
  </div>
	
  
  </body>
  
  </html>
